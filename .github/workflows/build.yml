name: Build pipeline
on:
  push:
    branches:
      - main
      - devel
  release:
    types: [released]

jobs:
  build:
    name: 🔨 Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: 🏗 Install build dependencies
        run: >-
          python -m pip install wheel build twine --user
      - name: 🔨 Build a binary wheel and a source tarball
        run: >-
          python -m build
      - name: 🧪 Check that twine is happy with it
        run: >-
          twine check --strict dist/*
      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  pre-commit:
    name: 🧹 Pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: 🏗 Set up dev dependencies
        run: |
          pip install -e .[develop]
      - name: 🚀 Run pre-commit
        run: |
          pre-commit run --all-files --show-diff-on-failure

  test-unit:
    name: 🧪 Unit tests
    strategy:
      fail-fast: false
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ubuntu-22.04 # change back to ubuntu-latest once we drop Python 3.7
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: 🏗 Set up test dependencies
        run: |
          pip install octoprint
          pip install -e .[develop]
      - name: 🚀 Run test suite
        run: |
          pytest

  test-install:
    name: 🧪 Installation test
    strategy:
      fail-fast: false
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ubuntu-22.04 # change back to ubuntu-latest once we drop Python 3.7
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: 🚀 Set up test dependencies & run test install
        run: |
          pip install octoprint
          pip install -e .[develop]

  test-e2e:
    name: 🧪 E2E tests
    needs: build
    runs-on: ubuntu-22.04 # change back to ubuntu-latest once we drop Python 3.7 & upgrade playwright
    strategy:
      fail-fast: false
      matrix:
        octoprint: ["master", "maintenance"]
        python: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          - octoprint: "maintenance"
            python: "3.7"
          - octoprint: "maintenance"
            python: "3.8"
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: 🎭 Run OctoPrint's E2E Tests
        uses: OctoPrint/actions/e2e@main
        with:
          ref: ${{ matrix.octoprint }}
          python: ${{ matrix.python }}
          deps: ${{ github.workspace }}/dist/*.whl
          suffix: "-${{ matrix.octoprint }}-py${{ matrix.python }}"

  publish-on-testpypi:
    name: 📦 Publish on TestPyPI
    if: github.event_name == 'release'
    needs:
      - build
      - pre-commit
      - test-install
      - test-unit
      - test-e2e
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/OctoPrint-PiSupport
    permissions:
      id-token: write
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: 📦 Publish to index
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-on-pypi:
    name: 📦 Publish tagged releases to PyPI
    if: github.event_name == 'release'
    needs: publish-on-testpypi
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://test.pypi.org/p/OctoPrint-PiSupport
    permissions:
      id-token: write
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: 📦 Publish to index
        uses: pypa/gh-action-pypi-publish@release/v1
